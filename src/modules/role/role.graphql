type role {
  name: String!
  id: Int!
}

input create_role_input {
  name: String
}

input update_role_input {
  id: Int
  name: String
}

input roles_input {
  skip: Int
  take: Int
}

type roles_output {
  skip: Int!
  take: Int!
  total: Int!
  data: [role]!
}

type Query {
  role(id: Int!): role
  roles(roles_input: roles_input): roles_output
}

type Mutation {
  create_role(create_role_input: create_role_input): role!
  update_role(update_role_input: update_role_input): role!
  remove_role(id: Int!): role
}
