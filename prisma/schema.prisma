generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model admin_event_entity {
  id               String  @id(map: "constraint_admin_event_entity") @db.VarChar(36)
  admin_event_time BigInt?
  realm_id         String? @db.VarChar(255)
  operation_type   String? @db.VarChar(255)
  auth_realm_id    String? @db.VarChar(255)
  auth_client_id   String? @db.VarChar(255)
  auth_user_id     String? @db.VarChar(255)
  ip_address       String? @db.VarChar(255)
  resource_path    String? @db.VarChar(2550)
  representation   String?
  error            String? @db.VarChar(255)
  resource_type    String? @db.VarChar(64)

  @@index([realm_id, admin_event_time], map: "idx_admin_event_time")
}

model associated_policy {
  policy_id                                                                             String                 @db.VarChar(36)
  associated_policy_id                                                                  String                 @db.VarChar(36)
  resource_server_policy_associated_policy_associated_policy_idToresource_server_policy resource_server_policy @relation("associated_policy_associated_policy_idToresource_server_policy", fields: [associated_policy_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_frsr5s213xcx4wnkog82ssrfy")
  resource_server_policy_associated_policy_policy_idToresource_server_policy            resource_server_policy @relation("associated_policy_policy_idToresource_server_policy", fields: [policy_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_frsrpas14xcx4wnkog82ssrfy")

  @@id([policy_id, associated_policy_id], map: "constraint_farsrpap")
  @@index([associated_policy_id], map: "idx_assoc_pol_assoc_pol_id")
}

model authentication_execution {
  id                  String               @id(map: "constraint_auth_exec_pk") @db.VarChar(36)
  alias               String?              @db.VarChar(255)
  authenticator       String?              @db.VarChar(36)
  realm_id            String?              @db.VarChar(36)
  flow_id             String?              @db.VarChar(36)
  requirement         Int?
  priority            Int?
  authenticator_flow  Boolean              @default(false)
  auth_flow_id        String?              @db.VarChar(36)
  auth_config         String?              @db.VarChar(36)
  authentication_flow authentication_flow? @relation(fields: [flow_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_auth_exec_flow")
  realm               realm?               @relation(fields: [realm_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_auth_exec_realm")

  @@index([flow_id], map: "idx_auth_exec_flow")
  @@index([realm_id, flow_id], map: "idx_auth_exec_realm_flow")
}

model authentication_flow {
  id                       String                     @id(map: "constraint_auth_flow_pk") @db.VarChar(36)
  alias                    String?                    @db.VarChar(255)
  description              String?                    @db.VarChar(255)
  realm_id                 String?                    @db.VarChar(36)
  provider_id              String                     @default("basic-flow") @db.VarChar(36)
  top_level                Boolean                    @default(false)
  built_in                 Boolean                    @default(false)
  realm                    realm?                     @relation(fields: [realm_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_auth_flow_realm")
  authentication_execution authentication_execution[]

  @@index([realm_id], map: "idx_auth_flow_realm")
}

model authenticator_config {
  id       String  @id(map: "constraint_auth_pk") @db.VarChar(36)
  alias    String? @db.VarChar(255)
  realm_id String? @db.VarChar(36)
  realm    realm?  @relation(fields: [realm_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_auth_realm")

  @@index([realm_id], map: "idx_auth_config_realm")
}

model authenticator_config_entry {
  authenticator_id String  @db.VarChar(36)
  value            String?
  name             String  @db.VarChar(255)

  @@id([authenticator_id, name], map: "constraint_auth_cfg_pk")
}

model broker_link {
  identity_provider   String  @db.VarChar(255)
  storage_provider_id String? @db.VarChar(255)
  realm_id            String  @db.VarChar(36)
  broker_user_id      String? @db.VarChar(255)
  broker_username     String? @db.VarChar(255)
  token               String?
  user_id             String  @db.VarChar(255)

  @@id([identity_provider, user_id], map: "constr_broker_link_pk")
}

model client {
  id                           String                      @id(map: "constraint_7") @db.VarChar(36)
  enabled                      Boolean                     @default(false)
  full_scope_allowed           Boolean                     @default(false)
  client_id                    String?                     @db.VarChar(255)
  not_before                   Int?
  public_client                Boolean                     @default(false)
  secret                       String?                     @db.VarChar(255)
  base_url                     String?                     @db.VarChar(255)
  bearer_only                  Boolean                     @default(false)
  management_url               String?                     @db.VarChar(255)
  surrogate_auth_required      Boolean                     @default(false)
  realm_id                     String?                     @db.VarChar(36)
  protocol                     String?                     @db.VarChar(255)
  node_rereg_timeout           Int?                        @default(0)
  frontchannel_logout          Boolean                     @default(false)
  consent_required             Boolean                     @default(false)
  name                         String?                     @db.VarChar(255)
  service_accounts_enabled     Boolean                     @default(false)
  client_authenticator_type    String?                     @db.VarChar(255)
  root_url                     String?                     @db.VarChar(255)
  description                  String?                     @db.VarChar(255)
  registration_token           String?                     @db.VarChar(255)
  standard_flow_enabled        Boolean                     @default(true)
  implicit_flow_enabled        Boolean                     @default(false)
  direct_access_grants_enabled Boolean                     @default(false)
  always_display_in_console    Boolean                     @default(false)
  client_attributes            client_attributes[]
  client_node_registrations    client_node_registrations[]
  protocol_mapper              protocol_mapper[]
  redirect_uris                redirect_uris[]
  scope_mapping                scope_mapping[]
  web_origins                  web_origins[]

  @@unique([realm_id, client_id], map: "uk_b71cjlbenv945rb6gcon438at")
  @@index([client_id], map: "idx_client_id")
}

model client_attributes {
  client_id String  @db.VarChar(36)
  value     String? @db.VarChar(4000)
  name      String  @db.VarChar(255)
  client    client  @relation(fields: [client_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk3c47c64beacca966")

  @@id([client_id, name], map: "constraint_3c")
  @@index([name], map: "idx_client_att_by_name_value")
}

model client_auth_flow_bindings {
  client_id    String  @db.VarChar(36)
  flow_id      String? @db.VarChar(36)
  binding_name String  @db.VarChar(255)

  @@id([client_id, binding_name], map: "c_cli_flow_bind")
}

model client_initial_access {
  id              String @id(map: "cnstr_client_init_acc_pk") @db.VarChar(36)
  realm_id        String @db.VarChar(36)
  timestamp       Int?
  expiration      Int?
  count           Int?
  remaining_count Int?
  realm           realm  @relation(fields: [realm_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_client_init_acc_realm")

  @@index([realm_id], map: "idx_client_init_acc_realm")
}

model client_node_registrations {
  client_id String @db.VarChar(36)
  value     Int?
  name      String @db.VarChar(255)
  client    client @relation(fields: [client_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk4129723ba992f594")

  @@id([client_id, name], map: "constraint_84")
}

model client_scope {
  id                        String                      @id(map: "pk_cli_template") @db.VarChar(36)
  name                      String?                     @db.VarChar(255)
  realm_id                  String?                     @db.VarChar(36)
  description               String?                     @db.VarChar(255)
  protocol                  String?                     @db.VarChar(255)
  client_scope_attributes   client_scope_attributes[]
  client_scope_role_mapping client_scope_role_mapping[]
  protocol_mapper           protocol_mapper[]

  @@unique([realm_id, name], map: "uk_cli_scope")
  @@index([realm_id], map: "idx_realm_clscope")
}

model client_scope_attributes {
  scope_id     String       @db.VarChar(36)
  value        String?      @db.VarChar(2048)
  name         String       @db.VarChar(255)
  client_scope client_scope @relation(fields: [scope_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cl_scope_attr_scope")

  @@id([scope_id, name], map: "pk_cl_tmpl_attr")
  @@index([scope_id], map: "idx_clscope_attrs")
}

model client_scope_client {
  client_id     String  @db.VarChar(255)
  scope_id      String  @db.VarChar(255)
  default_scope Boolean @default(false)

  @@id([client_id, scope_id], map: "c_cli_scope_bind")
  @@index([scope_id], map: "idx_cl_clscope")
  @@index([client_id], map: "idx_clscope_cl")
}

model client_scope_role_mapping {
  scope_id     String       @db.VarChar(36)
  role_id      String       @db.VarChar(36)
  client_scope client_scope @relation(fields: [scope_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cl_scope_rm_scope")

  @@id([scope_id, role_id], map: "pk_template_scope")
  @@index([scope_id], map: "idx_clscope_role")
  @@index([role_id], map: "idx_role_clscope")
}

model client_session {
  id                         String                       @id(map: "constraint_8") @db.VarChar(36)
  client_id                  String?                      @db.VarChar(36)
  redirect_uri               String?                      @db.VarChar(255)
  state                      String?                      @db.VarChar(255)
  timestamp                  Int?
  session_id                 String?                      @db.VarChar(36)
  auth_method                String?                      @db.VarChar(255)
  realm_id                   String?                      @db.VarChar(255)
  auth_user_id               String?                      @db.VarChar(36)
  current_action             String?                      @db.VarChar(36)
  user_session               user_session?                @relation(fields: [session_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_b4ao2vcvat6ukau74wbwtfqo1")
  client_session_auth_status client_session_auth_status[]
  client_session_note        client_session_note[]
  client_session_prot_mapper client_session_prot_mapper[]
  client_session_role        client_session_role[]
  client_user_session_note   client_user_session_note[]

  @@index([session_id], map: "idx_client_session_session")
}

model client_session_auth_status {
  authenticator                                             String         @db.VarChar(36)
  status                                                    Int?
  client_session                                            String         @db.VarChar(36)
  client_session_client_sessionToclient_session_auth_status client_session @relation(fields: [client_session], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_status_constraint")

  @@id([client_session, authenticator], map: "constraint_auth_status_pk")
}

model client_session_note {
  name                                               String         @db.VarChar(255)
  value                                              String?        @db.VarChar(255)
  client_session                                     String         @db.VarChar(36)
  client_session_client_sessionToclient_session_note client_session @relation(fields: [client_session], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk5edfb00ff51c2736")

  @@id([client_session, name], map: "constraint_5e")
}

model client_session_prot_mapper {
  protocol_mapper_id                                        String         @db.VarChar(36)
  client_session                                            String         @db.VarChar(36)
  client_session_client_sessionToclient_session_prot_mapper client_session @relation(fields: [client_session], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_33a8sgqw18i532811v7o2dk89")

  @@id([client_session, protocol_mapper_id], map: "constraint_cs_pmp_pk")
}

model client_session_role {
  role_id                                            String         @db.VarChar(255)
  client_session                                     String         @db.VarChar(36)
  client_session_client_sessionToclient_session_role client_session @relation(fields: [client_session], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_11b7sgqw18i532811v7o2dv76")

  @@id([client_session, role_id], map: "constraint_5")
}

model client_user_session_note {
  name                                                    String         @db.VarChar(255)
  value                                                   String?        @db.VarChar(2048)
  client_session                                          String         @db.VarChar(36)
  client_session_client_sessionToclient_user_session_note client_session @relation(fields: [client_session], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cl_usr_ses_note")

  @@id([client_session, name], map: "constr_cl_usr_ses_note")
}

model component {
  id               String             @id(map: "constr_component_pk") @db.VarChar(36)
  name             String?            @db.VarChar(255)
  parent_id        String?            @db.VarChar(36)
  provider_id      String?            @db.VarChar(36)
  provider_type    String?            @db.VarChar(255)
  realm_id         String?            @db.VarChar(36)
  sub_type         String?            @db.VarChar(255)
  realm            realm?             @relation(fields: [realm_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_component_realm")
  component_config component_config[]

  @@index([provider_type], map: "idx_component_provider_type")
  @@index([realm_id], map: "idx_component_realm")
}

model component_config {
  id           String    @id(map: "constr_component_config_pk") @db.VarChar(36)
  component_id String    @db.VarChar(36)
  name         String    @db.VarChar(255)
  value        String?   @db.VarChar(4000)
  component    component @relation(fields: [component_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_component_config")

  @@index([component_id], map: "idx_compo_config_compo")
}

model composite_role {
  composite                                              String        @db.VarChar(36)
  child_role                                             String        @db.VarChar(36)
  keycloak_role_composite_role_child_roleTokeycloak_role keycloak_role @relation("composite_role_child_roleTokeycloak_role", fields: [child_role], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_gr7thllb9lu8q4vqa4524jjy8")
  keycloak_role_composite_role_compositeTokeycloak_role  keycloak_role @relation("composite_role_compositeTokeycloak_role", fields: [composite], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_a63wvekftu8jo1pnj81e7mce2")

  @@id([composite, child_role], map: "constraint_composite_role")
  @@index([composite], map: "idx_composite")
  @@index([child_role], map: "idx_composite_child")
}

model credential {
  id              String       @id(map: "constraint_f") @db.VarChar(36)
  salt            Bytes?
  type            String?      @db.VarChar(255)
  user_id         String?      @db.VarChar(36)
  created_date    BigInt?
  user_label      String?      @db.VarChar(255)
  secret_data     String?
  credential_data String?
  priority        Int?
  user_entity     user_entity? @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_pfyr0glasqyl0dei3kl69r6v0")

  @@index([user_id], map: "idx_user_credential")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model databasechangelog {
  id            String   @db.VarChar(255)
  author        String   @db.VarChar(255)
  filename      String   @db.VarChar(255)
  dateexecuted  DateTime @db.Timestamp(6)
  orderexecuted Int
  exectype      String   @db.VarChar(10)
  md5sum        String?  @db.VarChar(35)
  description   String?  @db.VarChar(255)
  comments      String?  @db.VarChar(255)
  tag           String?  @db.VarChar(255)
  liquibase     String?  @db.VarChar(20)
  contexts      String?  @db.VarChar(255)
  labels        String?  @db.VarChar(255)
  deployment_id String?  @db.VarChar(10)

  @@ignore
}

model databasechangeloglock {
  id          Int       @id
  locked      Boolean
  lockgranted DateTime? @db.Timestamp(6)
  lockedby    String?   @db.VarChar(255)
}

model default_client_scope {
  realm_id      String  @db.VarChar(36)
  scope_id      String  @db.VarChar(36)
  default_scope Boolean @default(false)
  realm         realm   @relation(fields: [realm_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_r_def_cli_scope_realm")

  @@id([realm_id, scope_id], map: "r_def_cli_scope_bind")
  @@index([realm_id], map: "idx_defcls_realm")
  @@index([scope_id], map: "idx_defcls_scope")
}

model event_entity {
  id           String  @id(map: "constraint_4") @db.VarChar(36)
  client_id    String? @db.VarChar(255)
  details_json String? @db.VarChar(2550)
  error        String? @db.VarChar(255)
  ip_address   String? @db.VarChar(255)
  realm_id     String? @db.VarChar(255)
  session_id   String? @db.VarChar(255)
  event_time   BigInt?
  type         String? @db.VarChar(255)
  user_id      String? @db.VarChar(255)

  @@index([realm_id, event_time], map: "idx_event_time")
}

model fed_user_attribute {
  id                  String  @id(map: "constr_fed_user_attr_pk") @db.VarChar(36)
  name                String  @db.VarChar(255)
  user_id             String  @db.VarChar(255)
  realm_id            String  @db.VarChar(36)
  storage_provider_id String? @db.VarChar(36)
  value               String? @db.VarChar(2024)

  @@index([user_id, realm_id, name], map: "idx_fu_attribute")
}

model fed_user_consent {
  id                      String  @id(map: "constr_fed_user_consent_pk") @db.VarChar(36)
  client_id               String? @db.VarChar(255)
  user_id                 String  @db.VarChar(255)
  realm_id                String  @db.VarChar(36)
  storage_provider_id     String? @db.VarChar(36)
  created_date            BigInt?
  last_updated_date       BigInt?
  client_storage_provider String? @db.VarChar(36)
  external_client_id      String? @db.VarChar(255)

  @@index([user_id, client_storage_provider, external_client_id], map: "idx_fu_cnsnt_ext")
  @@index([user_id, client_id], map: "idx_fu_consent")
  @@index([realm_id, user_id], map: "idx_fu_consent_ru")
}

model fed_user_consent_cl_scope {
  user_consent_id String @db.VarChar(36)
  scope_id        String @db.VarChar(36)

  @@id([user_consent_id, scope_id], map: "constraint_fgrntcsnt_clsc_pm")
}

model fed_user_credential {
  id                  String  @id(map: "constr_fed_user_cred_pk") @db.VarChar(36)
  salt                Bytes?
  type                String? @db.VarChar(255)
  created_date        BigInt?
  user_id             String  @db.VarChar(255)
  realm_id            String  @db.VarChar(36)
  storage_provider_id String? @db.VarChar(36)
  user_label          String? @db.VarChar(255)
  secret_data         String?
  credential_data     String?
  priority            Int?

  @@index([user_id, type], map: "idx_fu_credential")
  @@index([realm_id, user_id], map: "idx_fu_credential_ru")
}

model fed_user_group_membership {
  group_id            String  @db.VarChar(36)
  user_id             String  @db.VarChar(255)
  realm_id            String  @db.VarChar(36)
  storage_provider_id String? @db.VarChar(36)

  @@id([group_id, user_id], map: "constr_fed_user_group")
  @@index([user_id, group_id], map: "idx_fu_group_membership")
  @@index([realm_id, user_id], map: "idx_fu_group_membership_ru")
}

model fed_user_required_action {
  required_action     String  @default(" ") @db.VarChar(255)
  user_id             String  @db.VarChar(255)
  realm_id            String  @db.VarChar(36)
  storage_provider_id String? @db.VarChar(36)

  @@id([required_action, user_id], map: "constr_fed_required_action")
  @@index([user_id, required_action], map: "idx_fu_required_action")
  @@index([realm_id, user_id], map: "idx_fu_required_action_ru")
}

model fed_user_role_mapping {
  role_id             String  @db.VarChar(36)
  user_id             String  @db.VarChar(255)
  realm_id            String  @db.VarChar(36)
  storage_provider_id String? @db.VarChar(36)

  @@id([role_id, user_id], map: "constr_fed_user_role")
  @@index([user_id, role_id], map: "idx_fu_role_mapping")
  @@index([realm_id, user_id], map: "idx_fu_role_mapping_ru")
}

model federated_identity {
  identity_provider  String      @db.VarChar(255)
  realm_id           String?     @db.VarChar(36)
  federated_user_id  String?     @db.VarChar(255)
  federated_username String?     @db.VarChar(255)
  token              String?
  user_id            String      @db.VarChar(36)
  user_entity        user_entity @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk404288b92ef007a6")

  @@id([identity_provider, user_id], map: "constraint_40")
  @@index([federated_user_id], map: "idx_fedidentity_feduser")
  @@index([user_id], map: "idx_fedidentity_user")
}

model federated_user {
  id                  String  @id(map: "constr_federated_user") @db.VarChar(255)
  storage_provider_id String? @db.VarChar(255)
  realm_id            String  @db.VarChar(36)
}

model group_attribute {
  id             String         @id(map: "constraint_group_attribute_pk") @default("sybase-needs-something-here") @db.VarChar(36)
  name           String         @db.VarChar(255)
  value          String?        @db.VarChar(255)
  group_id       String         @db.VarChar(36)
  keycloak_group keycloak_group @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_group_attribute_group")

  @@index([group_id], map: "idx_group_attr_group")
}

model group_role_mapping {
  role_id        String         @db.VarChar(36)
  group_id       String         @db.VarChar(36)
  keycloak_group keycloak_group @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_group_role_group")

  @@id([role_id, group_id], map: "constraint_group_role")
  @@index([group_id], map: "idx_group_role_mapp_group")
}

model identity_provider {
  internal_id                String                     @id(map: "constraint_2b") @db.VarChar(36)
  enabled                    Boolean                    @default(false)
  provider_alias             String?                    @db.VarChar(255)
  provider_id                String?                    @db.VarChar(255)
  store_token                Boolean                    @default(false)
  authenticate_by_default    Boolean                    @default(false)
  realm_id                   String?                    @db.VarChar(36)
  add_token_role             Boolean                    @default(true)
  trust_email                Boolean                    @default(false)
  first_broker_login_flow_id String?                    @db.VarChar(36)
  post_broker_login_flow_id  String?                    @db.VarChar(36)
  provider_display_name      String?                    @db.VarChar(255)
  link_only                  Boolean                    @default(false)
  realm                      realm?                     @relation(fields: [realm_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk2b4ebc52ae5c3b34")
  identity_provider_config   identity_provider_config[]

  @@unique([provider_alias, realm_id], map: "uk_2daelwnibji49avxsrtuf6xj33")
  @@index([realm_id], map: "idx_ident_prov_realm")
}

model identity_provider_config {
  identity_provider_id String            @db.VarChar(36)
  value                String?
  name                 String            @db.VarChar(255)
  identity_provider    identity_provider @relation(fields: [identity_provider_id], references: [internal_id], onDelete: NoAction, onUpdate: NoAction, map: "fkdc4897cf864c4e43")

  @@id([identity_provider_id, name], map: "constraint_d")
}

model identity_provider_mapper {
  id                String              @id(map: "constraint_idpm") @db.VarChar(36)
  name              String              @db.VarChar(255)
  idp_alias         String              @db.VarChar(255)
  idp_mapper_name   String              @db.VarChar(255)
  realm_id          String              @db.VarChar(36)
  realm             realm               @relation(fields: [realm_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_idpm_realm")
  idp_mapper_config idp_mapper_config[]

  @@index([realm_id], map: "idx_id_prov_mapp_realm")
}

model idp_mapper_config {
  idp_mapper_id            String                   @db.VarChar(36)
  value                    String?
  name                     String                   @db.VarChar(255)
  identity_provider_mapper identity_provider_mapper @relation(fields: [idp_mapper_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_idpmconfig")

  @@id([idp_mapper_id, name], map: "constraint_idpmconfig")
}

model keycloak_group {
  id                 String               @id(map: "constraint_group") @db.VarChar(36)
  name               String?              @db.VarChar(255)
  parent_group       String               @db.VarChar(36)
  realm_id           String?              @db.VarChar(36)
  group_attribute    group_attribute[]
  group_role_mapping group_role_mapping[]

  @@unique([realm_id, parent_group, name], map: "sibling_names")
}

model keycloak_role {
  id                                                      String           @id(map: "constraint_a") @db.VarChar(36)
  client_realm_constraint                                 String?          @db.VarChar(255)
  client_role                                             Boolean          @default(false)
  description                                             String?          @db.VarChar(255)
  name                                                    String?          @db.VarChar(255)
  realm_id                                                String?          @db.VarChar(255)
  client                                                  String?          @db.VarChar(36)
  realm                                                   String?          @db.VarChar(36)
  realm_keycloak_roleTorealm                              realm?           @relation(fields: [realm], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_6vyqfe4cn4wlq8r6kt5vdsj5c")
  composite_role_composite_role_child_roleTokeycloak_role composite_role[] @relation("composite_role_child_roleTokeycloak_role")
  composite_role_composite_role_compositeTokeycloak_role  composite_role[] @relation("composite_role_compositeTokeycloak_role")
  role_attribute                                          role_attribute[]

  @@unique([name, client_realm_constraint], map: "UK_J3RWUVD56ONTGSUHOGM184WW2-2")
  @@index([client], map: "idx_keycloak_role_client")
  @@index([realm], map: "idx_keycloak_role_realm")
}

model migration_model {
  id          String  @id(map: "constraint_migmod") @db.VarChar(36)
  version     String? @db.VarChar(36)
  update_time BigInt  @default(0)

  @@index([update_time], map: "idx_update_time")
}

model offline_client_session {
  user_session_id         String  @db.VarChar(36)
  client_id               String  @db.VarChar(255)
  offline_flag            String  @db.VarChar(4)
  timestamp               Int?
  data                    String?
  client_storage_provider String  @default("local") @db.VarChar(36)
  external_client_id      String  @default("local") @db.VarChar(255)

  @@id([user_session_id, client_id, client_storage_provider, external_client_id, offline_flag], map: "constraint_offl_cl_ses_pk3")
  @@index([client_id, offline_flag], map: "idx_offline_css_preload")
  @@index([user_session_id], map: "idx_us_sess_id_on_cl_sess")
}

model offline_user_session {
  user_session_id      String  @db.VarChar(36)
  user_id              String  @db.VarChar(255)
  realm_id             String  @db.VarChar(36)
  created_on           Int
  offline_flag         String  @db.VarChar(4)
  data                 String?
  last_session_refresh Int     @default(0)

  @@id([user_session_id, offline_flag], map: "constraint_offl_us_ses_pk2")
  @@index([user_id, realm_id, offline_flag], map: "idx_offline_uss_by_user")
  @@index([realm_id, offline_flag, user_session_id], map: "idx_offline_uss_by_usersess")
  @@index([created_on], map: "idx_offline_uss_createdon")
  @@index([offline_flag, created_on, user_session_id], map: "idx_offline_uss_preload")
}

model policy_config {
  policy_id              String                 @db.VarChar(36)
  name                   String                 @db.VarChar(255)
  value                  String?
  resource_server_policy resource_server_policy @relation(fields: [policy_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fkdc34197cf864c4e43")

  @@id([policy_id, name], map: "constraint_dpc")
}

model protocol_mapper {
  id                     String                   @id(map: "constraint_pcm") @db.VarChar(36)
  name                   String                   @db.VarChar(255)
  protocol               String                   @db.VarChar(255)
  protocol_mapper_name   String                   @db.VarChar(255)
  client_id              String?                  @db.VarChar(36)
  client_scope_id        String?                  @db.VarChar(36)
  client                 client?                  @relation(fields: [client_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_pcm_realm")
  client_scope           client_scope?            @relation(fields: [client_scope_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cli_scope_mapper")
  protocol_mapper_config protocol_mapper_config[]

  @@index([client_scope_id], map: "idx_clscope_protmap")
  @@index([client_id], map: "idx_protocol_mapper_client")
}

model protocol_mapper_config {
  protocol_mapper_id String          @db.VarChar(36)
  value              String?
  name               String          @db.VarChar(255)
  protocol_mapper    protocol_mapper @relation(fields: [protocol_mapper_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_pmconfig")

  @@id([protocol_mapper_id, name], map: "constraint_pmconfig")
}

model realm {
  id                           String                      @id(map: "constraint_4a") @db.VarChar(36)
  access_code_lifespan         Int?
  user_action_lifespan         Int?
  access_token_lifespan        Int?
  account_theme                String?                     @db.VarChar(255)
  admin_theme                  String?                     @db.VarChar(255)
  email_theme                  String?                     @db.VarChar(255)
  enabled                      Boolean                     @default(false)
  events_enabled               Boolean                     @default(false)
  events_expiration            BigInt?
  login_theme                  String?                     @db.VarChar(255)
  name                         String?                     @unique(map: "uk_orvsdmla56612eaefiq6wl5oi") @db.VarChar(255)
  not_before                   Int?
  password_policy              String?                     @db.VarChar(2550)
  registration_allowed         Boolean                     @default(false)
  remember_me                  Boolean                     @default(false)
  reset_password_allowed       Boolean                     @default(false)
  social                       Boolean                     @default(false)
  ssl_required                 String?                     @db.VarChar(255)
  sso_idle_timeout             Int?
  sso_max_lifespan             Int?
  update_profile_on_soc_login  Boolean                     @default(false)
  verify_email                 Boolean                     @default(false)
  master_admin_client          String?                     @db.VarChar(36)
  login_lifespan               Int?
  internationalization_enabled Boolean                     @default(false)
  default_locale               String?                     @db.VarChar(255)
  reg_email_as_username        Boolean                     @default(false)
  admin_events_enabled         Boolean                     @default(false)
  admin_events_details_enabled Boolean                     @default(false)
  edit_username_allowed        Boolean                     @default(false)
  otp_policy_counter           Int?                        @default(0)
  otp_policy_window            Int?                        @default(1)
  otp_policy_period            Int?                        @default(30)
  otp_policy_digits            Int?                        @default(6)
  otp_policy_alg               String?                     @default("HmacSHA1") @db.VarChar(36)
  otp_policy_type              String?                     @default("totp") @db.VarChar(36)
  browser_flow                 String?                     @db.VarChar(36)
  registration_flow            String?                     @db.VarChar(36)
  direct_grant_flow            String?                     @db.VarChar(36)
  reset_credentials_flow       String?                     @db.VarChar(36)
  client_auth_flow             String?                     @db.VarChar(36)
  offline_session_idle_timeout Int?                        @default(0)
  revoke_refresh_token         Boolean                     @default(false)
  access_token_life_implicit   Int?                        @default(0)
  login_with_email_allowed     Boolean                     @default(true)
  duplicate_emails_allowed     Boolean                     @default(false)
  docker_auth_flow             String?                     @db.VarChar(36)
  refresh_token_max_reuse      Int?                        @default(0)
  allow_user_managed_access    Boolean                     @default(false)
  sso_max_lifespan_remember_me Int                         @default(0)
  sso_idle_timeout_remember_me Int                         @default(0)
  default_role                 String?                     @db.VarChar(255)
  authentication_execution     authentication_execution[]
  authentication_flow          authentication_flow[]
  authenticator_config         authenticator_config[]
  client_initial_access        client_initial_access[]
  component                    component[]
  default_client_scope         default_client_scope[]
  identity_provider            identity_provider[]
  identity_provider_mapper     identity_provider_mapper[]
  keycloak_role                keycloak_role[]
  realm_attribute              realm_attribute[]
  realm_default_groups         realm_default_groups[]
  realm_enabled_event_types    realm_enabled_event_types[]
  realm_events_listeners       realm_events_listeners[]
  realm_required_credential    realm_required_credential[]
  realm_smtp_config            realm_smtp_config[]
  realm_supported_locales      realm_supported_locales[]
  required_action_provider     required_action_provider[]
  user_federation_mapper       user_federation_mapper[]
  user_federation_provider     user_federation_provider[]

  @@index([master_admin_client], map: "idx_realm_master_adm_cli")
}

model realm_attribute {
  name     String  @db.VarChar(255)
  realm_id String  @db.VarChar(36)
  value    String?
  realm    realm   @relation(fields: [realm_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_8shxd6l3e9atqukacxgpffptw")

  @@id([name, realm_id], map: "constraint_9")
  @@index([realm_id], map: "idx_realm_attr_realm")
}

model realm_default_groups {
  realm_id String @db.VarChar(36)
  group_id String @unique(map: "con_group_id_def_groups") @db.VarChar(36)
  realm    realm  @relation(fields: [realm_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_def_groups_realm")

  @@id([realm_id, group_id], map: "constr_realm_default_groups")
  @@index([realm_id], map: "idx_realm_def_grp_realm")
}

model realm_enabled_event_types {
  realm_id String @db.VarChar(36)
  value    String @db.VarChar(255)
  realm    realm  @relation(fields: [realm_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_h846o4h0w8epx5nwedrf5y69j")

  @@id([realm_id, value], map: "constr_realm_enabl_event_types")
  @@index([realm_id], map: "idx_realm_evt_types_realm")
}

model realm_events_listeners {
  realm_id String @db.VarChar(36)
  value    String @db.VarChar(255)
  realm    realm  @relation(fields: [realm_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_h846o4h0w8epx5nxev9f5y69j")

  @@id([realm_id, value], map: "constr_realm_events_listeners")
  @@index([realm_id], map: "idx_realm_evt_list_realm")
}

model realm_localizations {
  realm_id String @db.VarChar(255)
  locale   String @db.VarChar(255)
  texts    String

  @@id([realm_id, locale])
}

model realm_required_credential {
  type       String  @db.VarChar(255)
  form_label String? @db.VarChar(255)
  input      Boolean @default(false)
  secret     Boolean @default(false)
  realm_id   String  @db.VarChar(36)
  realm      realm   @relation(fields: [realm_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_5hg65lybevavkqfki3kponh9v")

  @@id([realm_id, type], map: "constraint_92")
}

model realm_smtp_config {
  realm_id String  @db.VarChar(36)
  value    String? @db.VarChar(255)
  name     String  @db.VarChar(255)
  realm    realm   @relation(fields: [realm_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_70ej8xdxgxd0b9hh6180irr0o")

  @@id([realm_id, name], map: "constraint_e")
}

model realm_supported_locales {
  realm_id String @db.VarChar(36)
  value    String @db.VarChar(255)
  realm    realm  @relation(fields: [realm_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_supported_locales_realm")

  @@id([realm_id, value], map: "constr_realm_supported_locales")
  @@index([realm_id], map: "idx_realm_supp_local_realm")
}

model redirect_uris {
  client_id String @db.VarChar(36)
  value     String @db.VarChar(255)
  client    client @relation(fields: [client_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_1burs8pb4ouj97h5wuppahv9f")

  @@id([client_id, value], map: "constraint_redirect_uris")
  @@index([client_id], map: "idx_redir_uri_client")
}

model required_action_config {
  required_action_id String  @db.VarChar(36)
  value              String?
  name               String  @db.VarChar(255)

  @@id([required_action_id, name], map: "constraint_req_act_cfg_pk")
}

model required_action_provider {
  id             String  @id(map: "constraint_req_act_prv_pk") @db.VarChar(36)
  alias          String? @db.VarChar(255)
  name           String? @db.VarChar(255)
  realm_id       String? @db.VarChar(36)
  enabled        Boolean @default(false)
  default_action Boolean @default(false)
  provider_id    String? @db.VarChar(255)
  priority       Int?
  realm          realm?  @relation(fields: [realm_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_req_act_realm")

  @@index([realm_id], map: "idx_req_act_prov_realm")
}

model resource_attribute {
  id                       String                   @id(map: "res_attr_pk") @default("sybase-needs-something-here") @db.VarChar(36)
  name                     String                   @db.VarChar(255)
  value                    String?                  @db.VarChar(255)
  resource_id              String                   @db.VarChar(36)
  resource_server_resource resource_server_resource @relation(fields: [resource_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_5hrm2vlf9ql5fu022kqepovbr")
}

model resource_policy {
  resource_id              String                   @db.VarChar(36)
  policy_id                String                   @db.VarChar(36)
  resource_server_policy   resource_server_policy   @relation(fields: [policy_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_frsrpp213xcx4wnkog82ssrfy")
  resource_server_resource resource_server_resource @relation(fields: [resource_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_frsrpos53xcx4wnkog82ssrfy")

  @@id([resource_id, policy_id], map: "constraint_farsrpp")
  @@index([policy_id], map: "idx_res_policy_policy")
}

model resource_scope {
  resource_id              String                   @db.VarChar(36)
  scope_id                 String                   @db.VarChar(36)
  resource_server_resource resource_server_resource @relation(fields: [resource_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_frsrpos13xcx4wnkog82ssrfy")
  resource_server_scope    resource_server_scope    @relation(fields: [scope_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_frsrps213xcx4wnkog82ssrfy")

  @@id([resource_id, scope_id], map: "constraint_farsrsp")
  @@index([scope_id], map: "idx_res_scope_scope")
}

model resource_server {
  id                          String                        @id(map: "pk_resource_server") @db.VarChar(36)
  allow_rs_remote_mgmt        Boolean                       @default(false)
  policy_enforce_mode         String                        @db.VarChar(15)
  decision_strategy           Int                           @default(1) @db.SmallInt
  resource_server_perm_ticket resource_server_perm_ticket[]
  resource_server_policy      resource_server_policy[]
  resource_server_resource    resource_server_resource[]
  resource_server_scope       resource_server_scope[]
}

model resource_server_perm_ticket {
  id                       String                   @id(map: "constraint_fapmt") @db.VarChar(36)
  owner                    String                   @db.VarChar(255)
  requester                String                   @db.VarChar(255)
  created_timestamp        BigInt
  granted_timestamp        BigInt?
  resource_id              String                   @db.VarChar(36)
  scope_id                 String?                  @db.VarChar(36)
  resource_server_id       String                   @db.VarChar(36)
  policy_id                String?                  @db.VarChar(36)
  resource_server_policy   resource_server_policy?  @relation(fields: [policy_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_frsrpo2128cx4wnkog82ssrfy")
  resource_server_resource resource_server_resource @relation(fields: [resource_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_frsrho213xcx4wnkog83sspmt")
  resource_server          resource_server          @relation(fields: [resource_server_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_frsrho213xcx4wnkog82sspmt")
  resource_server_scope    resource_server_scope?   @relation(fields: [scope_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_frsrho213xcx4wnkog84sspmt")

  @@unique([owner, requester, resource_server_id, resource_id, scope_id], map: "uk_frsr6t700s9v50bu18ws5pmt")
}

model resource_server_policy {
  id                                                                               String                        @id(map: "constraint_farsrp") @db.VarChar(36)
  name                                                                             String                        @db.VarChar(255)
  description                                                                      String?                       @db.VarChar(255)
  type                                                                             String                        @db.VarChar(255)
  decision_strategy                                                                String?                       @db.VarChar(20)
  logic                                                                            String?                       @db.VarChar(20)
  resource_server_id                                                               String                        @db.VarChar(36)
  owner                                                                            String?                       @db.VarChar(255)
  resource_server                                                                  resource_server               @relation(fields: [resource_server_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_frsrpo213xcx4wnkog82ssrfy")
  associated_policy_associated_policy_associated_policy_idToresource_server_policy associated_policy[]           @relation("associated_policy_associated_policy_idToresource_server_policy")
  associated_policy_associated_policy_policy_idToresource_server_policy            associated_policy[]           @relation("associated_policy_policy_idToresource_server_policy")
  policy_config                                                                    policy_config[]
  resource_policy                                                                  resource_policy[]
  resource_server_perm_ticket                                                      resource_server_perm_ticket[]
  scope_policy                                                                     scope_policy[]

  @@unique([name, resource_server_id], map: "uk_frsrpt700s9v50bu18ws5ha6")
  @@index([resource_server_id], map: "idx_res_serv_pol_res_serv")
}

model resource_server_resource {
  id                          String                        @id(map: "constraint_farsr") @db.VarChar(36)
  name                        String                        @db.VarChar(255)
  type                        String?                       @db.VarChar(255)
  icon_uri                    String?                       @db.VarChar(255)
  owner                       String                        @db.VarChar(255)
  resource_server_id          String                        @db.VarChar(36)
  owner_managed_access        Boolean                       @default(false)
  display_name                String?                       @db.VarChar(255)
  resource_server             resource_server               @relation(fields: [resource_server_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_frsrho213xcx4wnkog82ssrfy")
  resource_attribute          resource_attribute[]
  resource_policy             resource_policy[]
  resource_scope              resource_scope[]
  resource_server_perm_ticket resource_server_perm_ticket[]
  resource_uris               resource_uris[]

  @@unique([name, owner, resource_server_id], map: "uk_frsr6t700s9v50bu18ws5ha6")
  @@index([resource_server_id], map: "idx_res_srv_res_res_srv")
}

model resource_server_scope {
  id                          String                        @id(map: "constraint_farsrs") @db.VarChar(36)
  name                        String                        @db.VarChar(255)
  icon_uri                    String?                       @db.VarChar(255)
  resource_server_id          String                        @db.VarChar(36)
  display_name                String?                       @db.VarChar(255)
  resource_server             resource_server               @relation(fields: [resource_server_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_frsrso213xcx4wnkog82ssrfy")
  resource_scope              resource_scope[]
  resource_server_perm_ticket resource_server_perm_ticket[]
  scope_policy                scope_policy[]

  @@unique([name, resource_server_id], map: "uk_frsrst700s9v50bu18ws5ha6")
  @@index([resource_server_id], map: "idx_res_srv_scope_res_srv")
}

model resource_uris {
  resource_id              String                   @db.VarChar(36)
  value                    String                   @db.VarChar(255)
  resource_server_resource resource_server_resource @relation(fields: [resource_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_resource_server_uris")

  @@id([resource_id, value], map: "constraint_resour_uris_pk")
}

model role_attribute {
  id            String        @id(map: "constraint_role_attribute_pk") @db.VarChar(36)
  role_id       String        @db.VarChar(36)
  name          String        @db.VarChar(255)
  value         String?       @db.VarChar(255)
  keycloak_role keycloak_role @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_role_attribute_id")

  @@index([role_id], map: "idx_role_attribute")
}

model scope_mapping {
  client_id String @db.VarChar(36)
  role_id   String @db.VarChar(36)
  client    client @relation(fields: [client_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ouse064plmlr732lxjcn1q5f1")

  @@id([client_id, role_id], map: "constraint_81")
  @@index([role_id], map: "idx_scope_mapping_role")
}

model scope_policy {
  scope_id               String                 @db.VarChar(36)
  policy_id              String                 @db.VarChar(36)
  resource_server_policy resource_server_policy @relation(fields: [policy_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_frsrasp13xcx4wnkog82ssrfy")
  resource_server_scope  resource_server_scope  @relation(fields: [scope_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_frsrpass3xcx4wnkog82ssrfy")

  @@id([scope_id, policy_id], map: "constraint_farsrsps")
  @@index([policy_id], map: "idx_scope_policy_policy")
}

model user_attribute {
  name        String      @db.VarChar(255)
  value       String?     @db.VarChar(255)
  user_id     String      @db.VarChar(36)
  id          String      @id(map: "constraint_user_attribute_pk") @default("sybase-needs-something-here") @db.VarChar(36)
  user_entity user_entity @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_5hrm2vlf9ql5fu043kqepovbr")

  @@index([user_id], map: "idx_user_attribute")
  @@index([name, value], map: "idx_user_attribute_name")
}

model user_consent {
  id                        String                      @id(map: "constraint_grntcsnt_pm") @db.VarChar(36)
  client_id                 String?                     @db.VarChar(255)
  user_id                   String                      @db.VarChar(36)
  created_date              BigInt?
  last_updated_date         BigInt?
  client_storage_provider   String?                     @db.VarChar(36)
  external_client_id        String?                     @db.VarChar(255)
  user_entity               user_entity                 @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_grntcsnt_user")
  user_consent_client_scope user_consent_client_scope[]

  @@unique([client_id, client_storage_provider, external_client_id, user_id], map: "uk_jkuwuvd56ontgsuhogm8uewrt")
  @@index([user_id], map: "idx_user_consent")
}

model user_consent_client_scope {
  user_consent_id String       @db.VarChar(36)
  scope_id        String       @db.VarChar(36)
  user_consent    user_consent @relation(fields: [user_consent_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_grntcsnt_clsc_usc")

  @@id([user_consent_id, scope_id], map: "constraint_grntcsnt_clsc_pm")
  @@index([user_consent_id], map: "idx_usconsent_clscope")
}

model user_entity {
  id                          String                  @id(map: "constraint_fb") @db.VarChar(36)
  email                       String?                 @db.VarChar(255)
  email_constraint            String?                 @db.VarChar(255)
  email_verified              Boolean                 @default(false)
  enabled                     Boolean                 @default(false)
  federation_link             String?                 @db.VarChar(255)
  first_name                  String?                 @db.VarChar(255)
  last_name                   String?                 @db.VarChar(255)
  realm_id                    String?                 @db.VarChar(255)
  username                    String?                 @db.VarChar(255)
  created_timestamp           BigInt?
  service_account_client_link String?                 @db.VarChar(255)
  not_before                  Int                     @default(0)
  credential                  credential[]
  federated_identity          federated_identity[]
  user_attribute              user_attribute[]
  user_consent                user_consent[]
  user_group_membership       user_group_membership[]
  user_required_action        user_required_action[]
  user_role_mapping           user_role_mapping[]

  @@unique([realm_id, email_constraint], map: "uk_dykn684sl8up1crfei6eckhd7")
  @@unique([realm_id, username], map: "uk_ru8tt6t700s9v50bu18ws5ha6")
  @@index([email], map: "idx_user_email")
  @@index([realm_id, service_account_client_link], map: "idx_user_service_account")
}

model user_federation_config {
  user_federation_provider_id String                   @db.VarChar(36)
  value                       String?                  @db.VarChar(255)
  name                        String                   @db.VarChar(255)
  user_federation_provider    user_federation_provider @relation(fields: [user_federation_provider_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_t13hpu1j94r2ebpekr39x5eu5")

  @@id([user_federation_provider_id, name], map: "constraint_f9")
}

model user_federation_mapper {
  id                            String                          @id(map: "constraint_fedmapperpm") @db.VarChar(36)
  name                          String                          @db.VarChar(255)
  federation_provider_id        String                          @db.VarChar(36)
  federation_mapper_type        String                          @db.VarChar(255)
  realm_id                      String                          @db.VarChar(36)
  user_federation_provider      user_federation_provider        @relation(fields: [federation_provider_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_fedmapperpm_fedprv")
  realm                         realm                           @relation(fields: [realm_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_fedmapperpm_realm")
  user_federation_mapper_config user_federation_mapper_config[]

  @@index([federation_provider_id], map: "idx_usr_fed_map_fed_prv")
  @@index([realm_id], map: "idx_usr_fed_map_realm")
}

model user_federation_mapper_config {
  user_federation_mapper_id String                 @db.VarChar(36)
  value                     String?                @db.VarChar(255)
  name                      String                 @db.VarChar(255)
  user_federation_mapper    user_federation_mapper @relation(fields: [user_federation_mapper_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_fedmapper_cfg")

  @@id([user_federation_mapper_id, name], map: "constraint_fedmapper_cfg_pm")
}

model user_federation_provider {
  id                     String                   @id(map: "constraint_5c") @db.VarChar(36)
  changed_sync_period    Int?
  display_name           String?                  @db.VarChar(255)
  full_sync_period       Int?
  last_sync              Int?
  priority               Int?
  provider_name          String?                  @db.VarChar(255)
  realm_id               String?                  @db.VarChar(36)
  realm                  realm?                   @relation(fields: [realm_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_1fj32f6ptolw2qy60cd8n01e8")
  user_federation_config user_federation_config[]
  user_federation_mapper user_federation_mapper[]

  @@index([realm_id], map: "idx_usr_fed_prv_realm")
}

model user_group_membership {
  group_id    String      @db.VarChar(36)
  user_id     String      @db.VarChar(36)
  user_entity user_entity @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_group_user")

  @@id([group_id, user_id], map: "constraint_user_group")
  @@index([user_id], map: "idx_user_group_mapping")
}

model user_required_action {
  user_id         String      @db.VarChar(36)
  required_action String      @default(" ") @db.VarChar(255)
  user_entity     user_entity @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_6qj3w1jw9cvafhe19bwsiuvmd")

  @@id([required_action, user_id], map: "constraint_required_action")
  @@index([user_id], map: "idx_user_reqactions")
}

model user_role_mapping {
  role_id     String      @db.VarChar(255)
  user_id     String      @db.VarChar(36)
  user_entity user_entity @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_c4fqv34p1mbylloxang7b1q3l")

  @@id([role_id, user_id], map: "constraint_c")
  @@index([user_id], map: "idx_user_role_mapping")
}

model user_session {
  id                   String              @id(map: "constraint_57") @db.VarChar(36)
  auth_method          String?             @db.VarChar(255)
  ip_address           String?             @db.VarChar(255)
  last_session_refresh Int?
  login_username       String?             @db.VarChar(255)
  realm_id             String?             @db.VarChar(255)
  remember_me          Boolean             @default(false)
  started              Int?
  user_id              String?             @db.VarChar(255)
  user_session_state   Int?
  broker_session_id    String?             @db.VarChar(255)
  broker_user_id       String?             @db.VarChar(255)
  client_session       client_session[]
  user_session_note    user_session_note[]
}

model user_session_note {
  user_session                                 String       @db.VarChar(36)
  name                                         String       @db.VarChar(255)
  value                                        String?      @db.VarChar(2048)
  user_session_user_sessionTouser_session_note user_session @relation(fields: [user_session], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk5edfb00ff51d3472")

  @@id([user_session, name], map: "constraint_usn_pk")
}

model username_login_failure {
  realm_id                String  @db.VarChar(36)
  username                String  @db.VarChar(255)
  failed_login_not_before Int?
  last_failure            BigInt?
  last_ip_failure         String? @db.VarChar(255)
  num_failures            Int?

  @@id([realm_id, username], map: "CONSTRAINT_17-2")
}

model web_origins {
  client_id String @db.VarChar(36)
  value     String @db.VarChar(255)
  client    client @relation(fields: [client_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_lojpho213xcx4wnkog82ssrfy")

  @@id([client_id, value], map: "constraint_web_origins")
  @@index([client_id], map: "idx_web_orig_client")
}
